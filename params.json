{"name":"GitHub Large Code Analysis (ghlca)","tagline":"What can be discovered if you download thousands of GitHub repositories?","body":"### Motivation\r\nMy motivation for starting the GitHub Large Code Analysis project was not in fact the [Third Annual GitHub Data Challenge](https://github.com/blog/1864-third-annual-github-data-challenge), instead around January 2014 I was interested in doing some sort of BigData type analysis, however I had almost no idea where to start. I came up with the idea to download a bunch of repositories from GitHub and see what I could find by analyzing  all of that code. Of course, like most of my ideas, I promptly forgot about it after getting really excited about it for a week and then realized it would take real work. Later I was reading [Hacker News](news.ycombinator.com) and came across an article about [Cgrep](http://awgn.github.io/cgrep/), which sparked my interest in the ghlca project again. I also came across another article about [The impact of language choice on github projects](http://corte.si/posts/code/devsurvey/), which was very much like part of what I wanted to do in the ghlca project. The final thing which got me working on the ghlca project was when a coworker asked if I had heard about the [Third Annual GitHub Data Challenge](https://github.com/blog/1864-third-annual-github-data-challenge), which finally gave me a deadline.\r\n\r\n### Getting Started\r\nThe first problem that needed solving was to determine which github repositories were the most 'valuable' repositories. I determined three ways of judging the 'value' of a repository using the dataset on Google BigQuery. Either by the most number of watchers, the most number of forks, or the highest value for watchers * forks. For the competition, I simply used about the top 5000 repositories with the most watchers, since I was under a time limit. The following was the code used to get those repositories, which I had found this on StackOverflow (unfortunately, I can't find it anymore).\r\n```\r\nSELECT\r\n  *\r\nFROM [publicdata:samples.github_timeline] a\r\nJOIN EACH\r\n  (\r\n     SELECT MAX(created_at) as max_created, repository_url \r\n     FROM [publicdata:samples.github_timeline]\r\n     GROUP EACH BY repository_url\r\n  ) b\r\n  ON \r\n  b.max_created = a.created_at and\r\n  b.repository_url = a.repository_url\r\nORDER BY repository_watchers desc\r\nLIMIT 5000\r\n```\r\n### Observations of Note\r\nWhile doing the initial development of my word counting python scripts, I used the [Apache Cassandra](https://github.com/apache/cassandra) repository, and discovered that the number of left and right parenthesis did not match, instead there were more left parenthesis than right. This could be explained by frown faces in the comments, however there were also more left curly braces '{' than right curly braces '}', and more left brackets '[' than right brackets ']'.\r\n\r\n### Character frequency:\r\n\r\n### Acknowledgements\r\nI would like to thank Aldo Cortesi (@cortesi) for his post on his work downloading a bunch of github repositories at [The impact of language choice on github projects](http://corte.si/posts/code/devsurvey/).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}