{"name":"GitHub Large Code Analysis (ghlca)","tagline":"What can be discovered if you download thousands of GitHub repositories?","body":"### Motivation\r\nMy motivation for starting the GitHub Large Code Analysis project was not in fact the [Third Annual GitHub Data Challenge](https://github.com/blog/1864-third-annual-github-data-challenge), instead around January 2014 I was interested in doing some sort of BigData type analysis, however I had almost no idea where to start. I came up with the idea to download a bunch of repositories from GitHub and see what I could find by analyzing  all of that code. Of course, like most of my ideas, I promptly forgot about it after getting really excited about it for a week and then realized it would take real work. Later I was reading [Hacker News](news.ycombinator.com) and came across an article about [Cgrep](http://awgn.github.io/cgrep/), which sparked my interest in the ghlca project again. I also came across another article about [The impact of language choice on github projects](http://corte.si/posts/code/devsurvey/), which was very much like part of what I wanted to do in the ghlca project. The final thing which got me working on the ghlca project was when a coworker asked if I had heard about the [Third Annual GitHub Data Challenge](https://github.com/blog/1864-third-annual-github-data-challenge), which finally gave me a deadline.\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Acknowledgements\r\nI would like to thank Aldo Cortesi (@cortesi) for his post on his work downloading a bunch of github repositories at [The impact of language choice on github projects](http://corte.si/posts/code/devsurvey/).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}